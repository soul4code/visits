# All configuration for plugins and other utils is defined here.
# Read more about `setup.cfg`:
# https://docs.python.org/3/distutils/configfile.html

[coverage:run]
branch = True
omit = */migrations/*.py, */test*.py, store/management/commands/defaultuser_create.py, manage.py

data_file = .coverage/.coverage
disable_warnings = True

[coverage:report]
fail_under = 93.3
precision = 0
skip_covered = True
sort = Cover
exclude_lines =
    pragma: no cover
    if TYPE_CHECKING:

[flake8]
# See: https://wemake-python-stylegui.de/en/latest/pages/usage/configuration.html
statistics = True
doctests = True

# (Default: 79)
max-line-length = 100

# WPS221 (Default: 14)
max-line-complexity = 18

# WPS231 (Default: 12)
max-jones-score = 14

# WPS210 (Default: 5)
max-local-variables = 8

# WPS211 (Default: 5)
max-arguments = 8

# WPS212 (Default: 5)
max-returns = 8

# WPS201 (Default: 12)
max-imports = 16

# WPS229 (Default: 1)
max-try-body-length = 6

# WPS214 (Default: 7)
max-methods = 11

# (Default: 7)
max-module-members = 15

# WPS235 (Default: 8)
max-import-from-members = 10

# (Recommended max: 10)
max-complexity = 6

# Flake plugins:
inline-quotes = double
isort-show-traceback = True
no-accept-encodings = True

# Disable some checks:
ignore =
         # Missing docstring in public module
         D100,
         # Missing docstring in public package
         D104,
         # Missing docstring in public nested class
         D106,
         # No blank lines allowed after function docstring
         D202,
         # Missing exception(s) in Raises section: -r ValidationError
         D401,
         # Ignored error does not occurs in a file
         X100,
         # missing trailing comma
         C812,
         # missing trailing comma in Python 3.5+
         C815,
         # missing trailing comma in Python 3.6+
         C816,
         # line break before binary operator
         W503,
         # Unexpected indentation.
         RST301,
         # Block quote ends without a blank line; unexpected unindent.
         RST201,
         # Definition list ends without a blank line; unexpected unindent.
         RST203,
         # Incorrect indentation
         DAR003,
         # Missing parameter(s) in Docstring
         DAR101,
         # Excess parameter(s) in Docstring
         DAR102,
         # Parameter type mismatch:  ~default_value: expected FieldValue but was Any
         DAR103,
         # Missing "Returns" in Docstring
         DAR201,
         # Missing "Yields" in Docstring
         DAR301,
         # Missing exception(s) in Raises section
         DAR401,
         # Found wrong variable name
         WPS110,
         # Found upper-case constant in a class
         WPS115,
         # Found usage of a variable marked as unused
         WPS121,
         # WPS201: Found module with too many imports
         WPS201
         # Found string constant over-use
         WPS226,
         # Found a too complex `f` string
         WPS237,
         # Found local folder import
         WPS300,
         # Found dotted raw import
         WPS301,
         # Found underscored number
         WPS303,
         # Found `f` string
         WPS305,
         # Found class without a base class
         WPS306,
         # Found reversed compare order
         WPS309,
         # Found an unnecessary blank line before a bracket
         WPS355,
         # Found `noqa` comments overuse
         WPS402,
         # Found magic number
         WPS432,
         # Found control variable used after block
         WPS441,
         # Found `in` used with a non-set container
         WPS510,
         # Found unpythonic getter or setter
         WPS615

# Docs: https://github.com/snoack/flake8-per-file-ignores
# You can completly or partialy disable our custom checks,
# to do so you have to ignore `WPS` letter for all python files:
per-file-ignores =

  # C101:   Coding magic comment not found
  urls.py: C101
  wsgi.py: C101


  # Migrations and Tasks
  # I001:   isort found an import in the wrong position
  # C101:   Coding magic comment not found
  # F401:   Module imported but unused
  # F403:   'from module import *' used; unable to detect undefined names
  # Q000:   Remove bad quotes
  # DJ01:   Using null=True is not recommended for some of the Django ORM fields.
  # E501:   Line too long
  # D101:   Missing docstring in public class
  # RST213: Inline emphasis start-string without end-string
  # WPS102: Found incorrect module name pattern
  # WPS201: Found module with too many imports
  # WPS210: Found too many local variables
  # WPS214: Found underscored name pattern
  # WPS219: Found too deep access level
  # WPS221: Found line with high Jones Complexity
  # WPS231: Found too high function cognitive complexity
  # WPS232: Found too high module cognitive complexity
  # WPS317: Found incorrect multi-line parameters
  # WPS347: Found vague import that may cause confusion
  # WPS412: Found `__init__.py` module with logic
  # WPS432: Found magic number
  # WPS420: Found wrong keyword
  # WPS440: Found block variables overlap: *
  **/migrations/*.py: E501, D101, WPS432, Q000, DJ01, WPS210, WPS114, WPS102, C101, WPS221, I001, WPS219, WPS201, WPS347, WPS440, WPS323, WPS232, WPS231, WPS420, WPS412, F403, F401, WPS317, WPS214, WPS458

  # F401:   module imported but unused
  # F403:   'from module import *' used; unable to detect undefined names
  # WPS433: Found nested import
  **/__init__.py: F401, F403
  **/apps.py: F401, WPS433

  # Tests
  # D103:   Missing docstring in public function
  # WPS201: Found module with too many imports
  # WPS202: Found too many module members
  # WPS204: Found overused expression
  # WPS213: Found too many expressions
  # WPS218: Found too many `assert` statements
  # WPS221: Found line with high Jones Complexity
  # WPS309: Found reversed compare order
  # WPS432: Found magic number
  # WPS210: Found too many local variables
  **/tests/*.py: S101, WPS432, WPS309, WPS213, WPS218, WPS204, D103, WPS221, WPS202, WPS201, WPS122, WPS210

exclude =
  manage.py

[tool:pytest]
# Django options:
DJANGO_SETTINGS_MODULE = visits.settings
python_files = tests.py test_*.py *_tests.py

# Directories that are not visited by pytest collector:
norecursedirs = *.egg .eggs dist build docs .tox .git __pycache__ frontend

# You will need to measure your tests speed with `-n auto` and without it,
# so you can see whether it gives you any performance gain, or just gives
# you an overhead. See `docs/template/development-process.rst`.
addopts =
  --strict-markers
  --tb=short
  --doctest-modules
  --fail-on-template-vars
  --cov=.
  --cov-report=term-missing
  --cov-report=html
  --cov-config=setup.cfg


[isort]
# See https://github.com/timothycrosley/isort#multi-line-output-modes
multi_line_output = 3
include_trailing_comma = true
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
default_section = FIRSTPARTY
# Should be: 80 - 1
line_length = 100
wrap_length = 100
combine_as_imports = true


[mypy]
# The mypy configurations: https://mypy.readthedocs.io/en/latest/config_file.html
python_version = 3.8

check_untyped_defs = True
disallow_untyped_calls = True
disallow_untyped_decorators = True
ignore_errors = False
ignore_missing_imports = True
strict_optional = True
no_implicit_optional = True
warn_unused_ignores = False
warn_redundant_casts = True
warn_unused_configs = True

[mypy-server.*.migrations.*]
# Django migrations should not produce any errors:
ignore_errors = True

[doc8]
ignore-path = docs/_build
max-line-length = 100
